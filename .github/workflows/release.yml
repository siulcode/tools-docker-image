name: release

# trigger on published release
on:
  release:
    types: [published]

jobs:
  load_supported_versions:
    runs-on: ubuntu-22.04

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Save supported versions as output
        id: set-matrix
        run: |
          VERSIONS=$(cat ./supported_versions.json | jq -c)
          echo "matrix=${VERSIONS}" >> $GITHUB_OUTPUT

  build_push_release:
    runs-on: ubuntu-22.04
    needs: load_supported_versions

    strategy:
      matrix: ${{ fromJSON(needs.load_supported_versions.outputs.matrix) }}

    env:
      ORGANIZATION: "zenika"
      IMAGE_NAME: "terraform-aws-cli"

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Get and save the release tag
        run: echo "RELEASE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Login to Docker Hub registry
        run: echo '${{ secrets.DOCKERHUB_PAT }}' | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push container images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/386
          build-args: |
            TERRAFORM_VERSION=${{ matrix.tf_versions }}
            AWS_CLI_VERSION=${{ matrix.awscli_versions }}
          tags: zenika/terraform-aws-cli:release-${{ env.RELEASE_TAG }}_terraform-${{ matrix.tf_versions }}_awscli-${{ matrix.awscli_versions }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
